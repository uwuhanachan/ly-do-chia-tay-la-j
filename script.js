(longcat => {
	var cat = document.querySelector(".longcat"),
		catHeight = cat.offsetHeight,
		achievBanner = document.querySelector(".achiev-banner"),
		achievName = document.querySelector(".achiev-name span"),
		achievReq = document.querySelector(".achiev-req"),
		achievEarnClass = "achiev-earned",
		lengthCt = document.querySelector(".count"),
		barrier = document.querySelector('.barrier'),
		numberF = new Intl.NumberFormat("en-US"),
		achievements = [
			{name: "K√©o n·ªØa ƒëi", pts: 1000},
			{name: "N·ªØa ƒëi, mu·ªën bi·∫øt th√¨ ph·∫£i k√©oooo", pts: 1500},
			{name: "Hmmmm üòá", pts: 2000},
			{name: "Sao b·∫°n v·∫´n ·ªü ƒë√¢y üôÇ", pts: 2500},
			{name: "B·∫°n mu·ªën bi·∫øt chia tay l·∫Øm √† üôÇ", pts: 3000},
			{name: "Sao v·∫´n k√©ooooooooooo", pts: 3500},
			{name: "B·∫°n ƒë∆∞·ª£c ƒë√≥, v·∫´n c·ªë c∆° √† ? üòº", pts: 4000},
			{name: "ƒê·ª´ng c√≥ m∆° m√† m√¨nh chia tay üëâüèºüëàüèº", pts: 4500},
			{name: "A ju 3 nham ‚úäüèºüëäüèº‚úäüèºüëäüèº", pts: 5000},
			{name: "Dun keo nua, a ju e hoq chia tay dau", pts: 5500},
			{name: "= ))) R·∫£nh th√¨ c·ª© k√©o ƒëi, hoq c√≤n g√¨ ƒë√¢u h∆° h∆° ", pts: 6000},
		],
		observerOptions = {
			root: null,
			rootMargin: "0px",
			threshold: 1.0
		},
		observer = new IntersectionObserver((entries,observer) => { 
			entries.forEach(entry => {
				if (entry.isIntersecting) {
					// increase cat length
					let catGrowAmount = entry.boundingClientRect.height;
					catHeight += catGrowAmount;
					lengthCt.innerHTML = catHeight;
					cat.style.height = catHeight + "px";
					// check if achievement reached
					for (let a of achievements) {
						if (catHeight >= a.pts && catHeight <= a.pts + catGrowAmount) {
							achievBanner.classList.add(achievEarnClass);
							setTimeout(() => {
								achievBanner.classList.remove(achievEarnClass);
							},3000);
							achievName.innerHTML = a.name;
							achievReq.innerHTML = "ƒê∆∞·ª£c " + numberF.format(a.pts) + "px r·ªìi c∆° ƒë·∫•y";
						}
					}
					window.scrollBy({
						top: -catGrowAmount,
						left: 0
					});
				}
			});
		}, observerOptions);
	
	observer.observe(barrier);
	// initial height
	lengthCt.innerHTML = catHeight;
})();